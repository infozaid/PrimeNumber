Single Responsibility:
Each Class should have only one sole purpose and not be filled with excessive functionality.

Open and Closed:
Classes should be open for extension and closed for modification.

Liskov Substitution
Every subclass or derived class should be substitutable for their base or parent class.
For Example: NoShape implements Shape (there is no sense for implements shape)

Interface Segregation
Interface should not force class to implement what they can't do.
Large interface should be divided into small ones.

For Example: Interface add another method Volume and implements with other classes to calculate volume


Dependency Inversion:
Components should  depend on abstractions,
not on concretion